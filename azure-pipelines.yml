trigger:
    - master

jobs:
    - job: Windows
      pool:
          vmImage: "windows-2019"
      steps:
          - script: dotnet build ./SimplCommerce.sln
            displayName: "dotnet build"
          - task: DotNetCoreCLI@2
            displayName: "run tests"
            inputs:
                command: test
                arguments: "--logger trx /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:Exclude=[xunit.*]*%2c[System.*]*"
                projects: "test/**/*.csproj"
                nobuild: true
          - task: DotNetCoreCLI@2
            inputs:
                command: custom
                custom: tool
                arguments: install --tool-path . dotnet-reportgenerator-globaltool
                displayName: Install ReportGenerator tool
          - script: ./reportgenerator "-reports:$(Build.SourcesDirectory)/test/**/coverage.cobertura.xml" "-targetdir:$(Build.SourcesDirectory)/coverlet/reports" "-reporttypes:HtmlInline_AzurePipelines;Cobertura"
            displayName: Create reports
          - task: PublishCodeCoverageResults@1
            displayName: "Publish code coverage"
            inputs:
                codeCoverageTool: Cobertura
                summaryFileLocation: $(Build.SourcesDirectory)/coverlet/reports/Cobertura.xml

          - task: BinSkim@3
            inputs:
                InputType: "Basic"
                Function: "analyze"
                AnalyzeTarget: '$(Build.ArtifactStagingDirectory)\*.dll;$(Build.ArtifactStagingDirectory)\*.exe'

          - task: CredScan@2
            inputs:
                toolMajorVersion: "V1"

          - task: RoslynAnalyzers@2
            inputs:
                userProvideBuildInfo: "auto"

          - task: SdtReport@1
            inputs:
                AllTools: true
                BinSkimBreakOn: "Error"
                RoslynAnalyzersBreakOn: "Error"
                TSLintBreakOn: "Error"
                ToolLogsNotFoundAction: "Standard"

          - task: TSLint@1
            inputs:
                RuleLibrary: "tslint"
                Ruleset: "tsrecommended"
                FileSelectionType: "fileGlob"
                Files: '**\*.ts'
                OutputFormat: "json"
                ToolVersion: "latest"
                TypeScriptVersion: "latest"

          - task: PostAnalysis@1
            inputs:
                AllTools: true
                BinSkimBreakOn: "Error"
                RoslynAnalyzersBreakOn: "Error"
                TSLintBreakOn: "Error"
                ToolLogsNotFoundAction: "Standard"
